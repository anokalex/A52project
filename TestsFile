####Fichier de tests pour l'attaque par connaissance de la keystream#####

Remarque:

Pour vérifier que notre attaque fonctionne, on stocke les valeurs des registres R1,R2 et R3 obtenues lors de la première phase de notre projet (mise en place d'A5/2).
On compare ensuite la solution renvoyée par notre algorithme d'attaque au vecteur formé par la concaténation de ces 3 registres.






Nous effectuons différents tests sur l'efficacité de l'attaque, en manipulant
plusieurs paramètres:


nb, correspondant au nombre de variables des registres fixées (par défaut, on a 64 variables).


nbo, correspondant au nombre d'octets qu'on veut donner en entrée (par défaut ,on a 15 octets en entrée, donc 120 bits, qui est la longueur d'une keystream).
Si on veut donner une keystream de longueur 2 ou 3 fois plus grande en entrée, il suffit de fixer nbo à 30 ou 45.


--------------------------

Test 1: nb=0 et nbo=15 -> Résolution non finie car dépassement mémoire (+ 4Go, magma s'arrête).

Plus généralement, pour un nombre de variables fixées inférieur à 8 et avec une keystream en entrée, la résolution ne se termine pas.


//Tests suivant se terminant, on retrouve les registres de départ.

Test 2: nb=8 et nbo=15:   Time : 264.900 s, 2357 Mb used, Step Degree Max= 3

Test 3: nb=10 et nbo=15:  Time: 114.640 s, 1843 Mb used, Step Degree Max= 3

Test 4: nb=20 et nbo=15: Time: 1.920 s, 33 Mb used, Step Degree Max= 4

Test 5: nb=0 et nbo=30 (Une keyStream de longueur 2* plus grande en entrée): -> Résolution non finie, dépassement mémoire

Test 6: nb=1 et nbo=30: Time: 11.580s, 224 Mb used, Step Degree Max= 3

Test 7: nb=3 et nbo=30: Time: 0.340s, 52.7 Mb used,  Step Degree Max= 3

Test 8: nb=5 et nbo=30: Time: 0.300 s, 49.3 Mb used, Step Degree Max= 3

Test 9: nb=0 et nbo=45: Time: 0.280 s, 62.38 Mb used, Step Degree Max= 3
Pour une keyStream de taille 3 fois plus grande que celle utilisée par défaut, il n'y a plus besoin de fixer des variables, et le temps d'éxecution est très faible.
